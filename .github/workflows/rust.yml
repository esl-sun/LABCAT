name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{matrix.os}}
    strategy: 
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12', '3.13']
        # python-version: ['3.13']

    steps:
    - uses: actions/checkout@v4
    - name: Update Rust toolchain
      run: rustup update
    - name: Lint
      run: |
        rustup component add clippy
        cargo clippy -- -D warnings
    - name: Cargo Build
      run: cargo build --release
    - name: Run example
      run: cargo run --example gp --release
    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python-version}}
    - name: Set up Python environment 
      run: |
        python -m pip install --upgrade pip
        python3 -m venv venv
    - name: Build Python package
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          source venv/bin/activate
        elif [ "$RUNNER_OS" == "macOS" ]; then
          source venv/bin/activate
        elif [ "$RUNNER_OS" == "Windows" ]; then
          source venv/Scripts/activate
        fi
        echo "VIRTUAL ENV:" $VIRTUAL_ENV
        pip install maturin
        cd ./python
        maturin develop --release